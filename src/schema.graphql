type Query {
  posts: [Post!]!
  users: [User!]!
  comments: [Comment!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createPost(data: CreatePostInput!): Post!
  createComment(data: CreateCommentInput!): Comment!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!
}

type Subscription {
  count: Int!
  comment(postid: ID!): Comment!
}

input CreateUserInput {
  name: String!
  email: String!
}

input UpdateUserInput {
  name: String
  email: String
}

input CreatePostInput {
  title: String!
  isActive: Boolean!
  body: String!
  userid: String!
}

input CreateCommentInput {
  text: String!
  userid: String!
  postid: String!
}

type User {
  id: ID!
  name: String!
  email: String!
  post: [Post!]!
  comment: [Comment!]!
}

type Post {
  id: ID!
  title: String!
  isActive: Boolean!
  body: String!
  admin: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  user: User!
  post: Post!
}
